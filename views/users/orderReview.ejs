<%- include('../layouts/homeLayout/header')%>
<div class="page-heading bg-light">
  <div class="container">
    <div class="row align-items-end text-center">
      <div class="col-lg-7 mx-auto">
        <h1>Checkout</h1>  
        <p class="mb-4"><a href="index.html">HOME</a> / <strong> ORDER REVIEW</strong></p>        
      </div>
    </div>
  </div>
</div>

<div class="untree_co-section">
  <div class="container">
    <div class="container">
      <div class="row mb-5">
        <div class="col-md-12">
          <div class="border p-4 rounded" role="alert">
            <h5>User Details</h5>
            <div class="row">
              <div class="col-sm-6">
                <h6><%= user.name %> , <%= user.email %></h6>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="container">
      <div class="row">
        <div class="col-md-6 mb-5 mb-md-0">
          <!-- Shipping Address Section -->
          <h2 class="h3 mb-3 text-black">Shipping Address</h2>
          <div class="p-3 p-lg-5 border">
              <div class="form-group row">
                <div class="col-md-6">
                  <div class="address-details">
                    <% if(defaultAddress){%>
                    <label class="text-black">Address: </label>
                    <span class="text-black"><%= defaultAddress.address1 %>, <%= defaultAddress.address2 %></span><br>
            <input type="hidden" value="<%= defaultAddress._id %>" name="addressId">
                    <label class="text-black">City: </label>
                    <span class="text-black"><%= defaultAddress.city %></span><br>
            
                    <label class="text-black">State: </label>
                    <span class="text-black"><%= defaultAddress.state %></span><br>
            
                    <label class="text-black">Country: </label>
                    <span class="text-black"><%= defaultAddress.country %></span><br>
            
                    <label class="text-black">Postal Code: </label>
                    <span class="text-black"><%= defaultAddress.pincode %></span>
                   <%}%> 
                  </div>
                </div>
              </div>
            </div>
            
            <!-- Coupon Code Section -->
            <!-- Existing code -->

<!-- Coupon Code Section -->
<div class="row mb-5">
  <div class="col-md-12">
    <h2 class="h3 mb-3 text-black">Coupon Code</h2>
    <div class="p-3 p-lg-5 border">
      <label for="c_code" class="text-black mb-3 bold">Select a coupon:</label>
      <select class="form-control" id="couponSelect">
        <option value="" class="bg-light">Select a coupon</option>
        <% coupons.forEach(function(coupon) { %>
          <option value="<%= coupon.couponCode %>" class="bg-primary text-white"><%= coupon.couponCode %></option>
        <% }); %>
      </select>

      <div class="input-group w-75 mt-3">
        <input type="text" class="form-control" id="cpnCode" placeholder="Coupon Code" aria-label="Coupon Code" aria-describedby="button-addon2">
        <div class="input-group-append">
          <button class="btn btn-black btn-sm cpnBtn" type="button" data-min-amount="0">Apply</button>
        </div>
      </div>
    </div>
    <input type="hidden" id="currentPurchaseAmount" value="<%= totalSubtotal %>">
  </div>
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
  $(document).ready(function () {
    $('#couponSelect').change(function () {
      const selectedCouponCode = $(this).val();
      $('#cpnCode').val(selectedCouponCode);
      $('.cpnBtn').attr('data-coupon-code', selectedCouponCode);
    });
  });
</script>

          </div>

          <div class="col-md-6">
            <h2 class="h3 mb-3 text-black">Your Order</h2>
            <div class="p-3 p-lg-5 border">
              <% let updatedTotal = 0; %>

                <table class="table site-block-order-table mb-5">
                  <thead>
                    <tr>
                      <th>Product</th>
                      <th>Price</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% cart.products.forEach(product => { %>
                      <tr>
                        <td><%= product.product.product_name %> <strong class="mx-2">x</strong> <%= product.quantity %></td>
                        <td>₹<%= (product.product.product_sales_price * product.quantity).toFixed(2) %></td>
                      </tr>
                      <% updatedTotal += (product.product.product_sales_price * product.quantity); %>
                    <% }); %>
                    <tr>
                      <td class="text-black font-weight-bold"><strong>Total</strong></td>
                      <td class="text-black font-weight-bold">₹<%= updatedTotal.toFixed(2) %></td>
                    </tr>
                  </tbody>
                </table>

              <!-- Order Table -->
              <!-- <table class="table site-block-order-table mb-5">
                <thead>
                  
                </thead>
                <tbody>
                  <% cart.products.forEach(product => { %>
                    <tr>
                      <td><%= product.product.product_name %> <strong class="mx-2">x</strong> <%= product.quantity %></td>
                      <td>₹<%= (product.product.product_sales_price * product.quantity).toFixed(2) %></td>
                    </tr>
                  <% }); %>
                </tbody>
              </table> -->
              
              <!-- Pricing Details -->
              <div class="border p-3 mb-3">
                <h3 class="h6 mb-3">Pricing Details</h3>
              
                <!-- Subtotal -->
                <div class="d-flex justify-content-between mb-2">
                  <span class="text-black">Subtotal:</span>
                  <span class="text-black">₹<%= totalSubtotal.toFixed(2) %></span>
                </div>
              
                <!-- Discount -->
                <div class="d-flex justify-content-between mb-2">
                  <span class="text-black">Discount:</span>
                  <span class="text-black">-₹<%= updatedTotal.toFixed(2) %></span> <!-- Replace with your discount value -->
                </div>
              
                <!-- Additional Discount -->
                <!-- <div class="d-flex justify-content-between mb-2">
                  <span class="text-black">Additional Discount:</span>
                  <span class="text-black">-$10.00</span> // Replace with your additional discount value 
                </div> -->
              
                <!-- Grand Total -->
                <% let grantTotal = updatedTotal; %> <!-- Assuming updatedTotal is the correct total you want to use as the grand total -->

                  <div class="d-flex justify-content-between">
                    <span class="text-black font-weight-bold">Grand Total:</span>
                    <span class="text-black font-weight-bold">₹<%= grantTotal.toFixed(2) %></span>
                  </div>
              
          
              <!-- Payment Options -->
              <!-- <form action="/makeorder" method="POST"> -->
                <div class="border p-2 mb-2">
                  <div class="payment-method">
                    <h4>Payment Method</h4>
                    <div class="form-group form-check">
                      <input form="paymentForm" type="radio" name="paymentMethod" id="f-option4" value="wallet">
                      <label class="form-check-label" for="f-option4">Wallet Only</label>
                    </div>
                    <div class="form-group form-check">
                      <input form="paymentForm" type="radio" name="paymentMethod" id="f-option5" value="cod">
                      <label class="form-check-label" for="f-option5">Cash on Delivery</label>
                    </div>
                    <div class="form-group form-check">
                      <input form="paymentForm" type="radio" name="paymentMethod" id="f-option6" value="online">
                      <label class="form-check-label" for="f-option6">Online Payment</label>
                    </div>
                  </div><!-- End .payment-method -->
                </div>
                <div class="form-group">
                  <button class="btn btn-black btn-lg py-3 btn-block" onclick="makePurchase('<%= totalSubtotal.toFixed(2) %>')">Place Order</button>


                </div>
              <!-- </form> -->
              
              <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
              <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
 function makePurchase(grandTotal) {
  let addressId = $("input[name='addressId']:checked").val();
  let selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked');
  
 

  let payment = selectedPaymentMethod.value;

  $.ajax({
    url: '/makeorder',
    method: 'POST',
    data: {
      addressId: addressId,
      payment_option: payment,
      GrandTotal: grandTotal
    },
    success: function(response) {
   
      console.log('Received response:', response);

      if (response.method === 'wallet') {
        showWalletSuccessMessage(response); // Pass the response object here
      } else if (response.method === 'cod') {
        
        Swal.fire({
					title: "Order success",
					text: "order placed successfully",
					icon: "success",
					showCancelButton: true,
					confirmButtonText: "view orders",
					cancelButtonText: "continue shopping",
					reverseButtons: true
				}).then(function (result) {
					if (result.value) {
						location.href = '/orders'
						
					} else if (result.dismiss === "cancel") {
						location.href = '/shop'
					}
				});
       
      } else if (response.method === 'online') {
        const options = {
          key: "rzp_test_qMTQYr3dAvrkB2",
          amount: response.generateOrder.amount_due,
          currency: "INR",
          name: "Future Furniture",
          description: "Test Transaction",
          image: "https://example.com/your_logo",
          order_id: response.generateOrder.id,
          handler: function (status) {
            verifyPayment(response, status);
          },
          prefill: {
            name: "Gaurav Kumar",
            email: "gaurav.kumar@example.com",
            contact: "9000090000"
          },
          notes: {
            address: "Razorpay Corporate Office"
          },
          theme: {
            color: "#3399cc"
          }
        };

        var rzp1 = new Razorpay(options);
        rzp1.open();
      } else {
        Swal.fire({
          title: 'Error Occurred',
          text: "Can't process order, an error occurred",
          icon: 'error',
          timer: 5000
        });
      }
    },
    error: function(err) {
      alert(err);
    }
  });
}
function verifyPayment(order,payment){
	console.log('verify payemennn')
	$.ajax({
		url:'/verifyPayment',
		method:'POST',
		data:{
			order,
			payment
		},
		success:(response)=>{
			if(response.status){                        
				location.href='/orders'
			} else{
				alert("Payment failed!" + response.errMsg)
			}
		}
	})
}

</script>
              <!-- <script>

                function makePurchase(GrandTotal) { 
                
                  let addressId = $("input[name='addressId']:checked").val();
                const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked');
               
                    let walletbutton = document.getElementById("f-option4")
                   let codbutton=document.getElementById("f-option5")
                   let onlinebutton=document.getElementById("f-option6")
                  
                      let payment
                      if(walletbutton.checked){
                      payment=walletbutton.value
                      }
                      else if(codbutton.checked){
                      payment=codbutton.value
                      }else if(onlinebutton.checked){
                      payment=onlinebutton.value
                      }
                      
                $.ajax({
                  url: '/makeorder',
                  method: 'POST',
                  data: {
                    addressId: addressId,
                    payment_option: payment,
                    GrandTotal: GrandTotal
              
                  },
                   success:(response) => {
                    console.log('Received response:', response);
                    
                    
                    if (response.method === 'wallet') {
                      showWalletSuccessMessage();
                      }else	if (response.method == 'cod') {
                      console.log('cashon deli')
                      Swal.fire({
                        title: "Order success",
                        text: "order placed successfully",
                        icon: "success",
                        showCancelButton: true,
                        confirmButtonText: "view orders",
                        cancelButtonText: "continue shopping",
                        reverseButtons: true
                      }).then(function (result) {
                        if (result.value) {
                          location.href = '/home'
                          // result.dismiss can be "cancel", "overlay",
                          // "close", and "timer"
                        } else if (result.dismiss === "cancel") {
                          location.href = '/checkout'
                        }
                      });
              
                    }else if(response.method === 'online'){
                    console.log('generaterOrder',response.generateOrder)
                      const options = {
                          "key": "rzp_test_XLuQj8MFj0FaxS", // Enter the Key ID generated from the Dashboard
                          "amount": response.generateOrder.amount_due, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
                          "currency": "INR",
                          "name": "Future Furniture", //your business name
                          "description": "Test Transaction",
                          "image": "https://example.com/your_logo",
                          "order_id":response.generateOrder.id , //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
                          "handler": function (status){
                            
                            verifyPayment(response,status)
                          },
                          "prefill": { //We recommend using the prefill parameter to auto-fill customer's contact information, especially their phone number
                            "name": "Gaurav Kumar", //your customer's name
                            "email": "gaurav.kumar@example.com", 
                            "contact": "9000090000"  //Provide the customer's phone number for better conversion rates 
                          },
                          "notes": {
                            "address": "Razorpay Corporate Office"
                          },
                          "theme": {
                            "color": "#3399cc"
                          }
                        };
                        
                        var rzp1 = new Razorpay(options);
                        rzp1.open();
              
              
                    }else {
                      Swal.fire({
                        title: 'Error Occured',
                        text: "Can't process order error occured",
                        icon: 'fail',
                        timer: 5000
                      })
              
                    }
                  },
                  error:(err)=>{
                    alert(err)
                  }
                })
              }
              
              function verifyPayment(order,payment){
                console.log('verify payemennn')
                $.ajax({
                  url:'/verifyPayment',
                  method:'POST',
                  data:{
                    order,
                    payment
                  },
                  success:(response)=>{
                    if(response.status){                        
                      location.href='/orderlist'
                    } else{
                      alert("Payment failed!" + response.errMsg)
                    }
                  }
                })
              }
              function showWalletSuccessMessage() {
                  Swal.fire({
                      icon: 'success',
                      title: 'Wallet Payment Successful!',
                      text: 'Your order was placed successfully using your wallet balance.',
                      showCancelButton: true,
                      cancelButtonText: 'Continue Shopping',
                      confirmButtonText: 'View Orders',
                      cancelButtonColor: '#d33',
                      confirmButtonColor: 'btn-success',
                      heightAuto: false,
                  }).then((result) => {
                      if (result.value) {
                          // Redirect to order details page
                          location.href = '/orderDetails?id=' + response.generateOrder.id;
                      } else if (result.dismiss === 'cancel') {
                          // Redirect to product list page
                          location.href = '/productList';
                      }
                  });
              }
              
              
              </script> -->
              
              
              <!-- <script>
                async function address() {
                  const pay = document.querySelectorAll('input[name="payment"]');
                  let selectedPay = '';
                  for (let i = 0; i < pay.length; i++) {
                    if (pay[i].checked) {
                      selectedPay = pay[i].value;
                      break;
                    }
                  }
                  try {
                    if(selectedPay=="COD"){
                        window.location.href = '/orderthankyou?method=COD';
                    }
                    else{
                        $.ajax({
                      url:"/checkout/razor_order?method=online",
                      type:"POST",
                      // data: formData,
                      success:function(res){
                        if(res.success){
                          var options = {
                            "key": ""+res.key_id+"",
                            "amount": ""+res.amount+"",
                            "currency": "INR",
                            // "name": ""+res.product_name+"",
                            // "description": ""+res.description+"",
                            // "image": "https://dummyimage.com/600x400/000/fff",
                            "order_id": ""+res.order_id+"",
                            "handler": function (response){
                                            
                                            verifyPayment(response.razorpay_payment_id,response.razorpay_order_id,response.razorpay_signature);
                            },
                            
                          };
                          var razorpayObject = new Razorpay(options);
                          razorpayObject.on('payment.failed', function (response){
                                        console.log("Payment Failed Event Triggered");
                                        fetch('/checkout/clear-total-after-discount', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({}),
                        })
                        .then(response => response.json())
                        .then(data => {
                            console.log('Total after discount cleared successfully');
                        })
                        .catch(error => {
                            console.error('Error clearing total after discount:', error);
                        });
                    });
                        
                          razorpayObject.open();
                        }
                        else{
                          alert(res.msg);
                        }
                      }
                    })
                
                    }
                   
                  } catch (err) {
                    alert('Error' + err);
                  }
                
                //   console.log(selectedAddress);
                }
                function verifyPayment(payment_id, order_id,razorpay_signature) {
                   
                   const data = {
                       payment_id: payment_id,
                       order_id: order_id
                   };
                
                  
                   fetch("/checkout/verifyPayment", {
                       method: "POST",
                       headers: {
                           "Content-Type": "application/json",
                           'x-razorpay-signature': razorpay_signature
                       },
                       body: JSON.stringify(data)
                   })
                   .then(response => response.json())
                   .then(data => { 
                        console.log(data)
                       if (data.success) {
                         
                           window.location.href = '/checkout/razor-payment?method=online'
                       }else {
                           console.log("Payment verification failed");
                        //    window.location.href = '/checkout/clear'
                          
                          
                       }
                   })
                   .catch(error => {
                       console.error("Error verifying payment:", error);
                   
                   });
                }
                
                
                
                 </script>
               -->
              
            </div>
          </div>
          

            <script>
                
            </script>
          
        </div>
      </div>
      
  </div>
</div>

<div class="untree_co-section bg-light">
  <div class="container">
    <div class="row align-items-stretch">
      <div class="col-12 col-sm-6 col-md-4 mb-3 mb-md-0">
        <div class="feature h-100">
          <div class="icon mb-4">
            <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-truck" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
              <path fill-rule="evenodd" d="M0 3.5A1.5 1.5 0 0 1 1.5 2h9A1.5 1.5 0 0 1 12 3.5v7h-1v-7a.5.5 0 0 0-.5-.5h-9a.5.5 0 0 0-.5.5v7a.5.5 0 0 0 .5.5v1A1.5 1.5 0 0 1 0 10.5v-7zM4.5 11h6v1h-6v-1z"/>
              <path fill-rule="evenodd" d="M11 5h2.02a1.5 1.5 0 0 1 1.17.563l1.481 1.85a1.5 1.5 0 0 1 .329.938V10.5a1.5 1.5 0 0 1-1.5 1.5h-1v-1h1a.5.5 0 0 0 .5-.5V8.35a.5.5 0 0 0-.11-.312l-1.48-1.85A.5.5 0 0 0 13.02 6H12v4.5h-1V5zm-8 8a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 1a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"/>
              <path fill-rule="evenodd" d="M12 13a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 1a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"/>
            </svg>
          </div>
          <h3>Worldwide Delivery</h3>
          <p>Far far away, behind the word mountains, far from the countries.</p>
        </div>
      </div>
      <div class="col-12 col-sm-6 col-md-4 mb-3 mb-md-0">
        <div class="feature h-100">
          <div class="icon mb-4">
            <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-shield-lock" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
              <path fill-rule="evenodd" d="M5.443 1.991a60.17 60.17 0 0 0-2.725.802.454.454 0 0 0-.315.366C1.87 7.056 3.1 9.9 4.567 11.773c.736.94 1.533 1.636 2.197 2.093.333.228.626.394.857.5.116.053.21.089.282.11A.73.73 0 0 0 8 14.5c.007-.001.038-.005.097-.023.072-.022.166-.058.282-.111.23-.106.525-.272.857-.5a10.197 10.197 0 0 0 2.197-2.093C12.9 9.9 14.13 7.056 13.597 3.159a.454.454 0 0 0-.315-.366c-.626-.2-1.682-.526-2.725-.802C9.491 1.71 8.51 1.5 8 1.5c-.51 0-1.49.21-2.557.491zm-.256-.966C6.23.749 7.337.5 8 .5c.662 0 1.77.249 2.813.525a61.09 61.09 0 0 1 2.772.815c.528.168.926.623 1.003 1.184.573 4.197-.756 7.307-2.367 9.365a11.191 11.191 0 0 1-2.418 2.3 6.942 6.942 0 0 1-1.007.586c-.27.124-.558.225-.796.225s-.526-.101-.796-.225a6.908 6.908 0 0 1-1.007-.586 11.192 11.192 0 0 1-2.417-2.3C2.167 10.331.839 7.221 1.412 3.024A1.454 1.454 0 0 1 2.415 1.84a61.11 61.11 0 0 1 2.772-.815z"/>
              <path d="M9.5 6.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
              <path d="M7.411 8.034a.5.5 0 0 1 .493-.417h.156a.5.5 0 0 1 .492.414l.347 2a.5.5 0 0 1-.493.585h-.835a.5.5 0 0 1-.493-.582l.333-2z"/>
            </svg>
          </div>
          <h3>Secure Payments</h3>
          <p>Far far away, behind the word mountains, far from the countries.</p>
        </div>
      </div>
      <div class="col-12 col-sm-6 col-md-4 mb-3 mb-md-0">
        <div class="feature h-100">
          <div class="icon mb-4">
            <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-arrow-counterclockwise" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
              <path fill-rule="evenodd" d="M12.83 6.706a5 5 0 0 0-7.103-3.16.5.5 0 1 1-.454-.892A6 6 0 1 1 2.545 5.5a.5.5 0 1 1 .91.417 5 5 0 1 0 9.375.789z"/>
              <path fill-rule="evenodd" d="M7.854.146a.5.5 0 0 0-.708 0l-2.5 2.5a.5.5 0 0 0 0 .708l2.5 2.5a.5.5 0 1 0 .708-.708L5.707 3 7.854.854a.5.5 0 0 0 0-.708z"/>
            </svg>
          </div>
          <h3>Simple Returns</h3>
          <p>Far far away, behind the word mountains, far from the countries.</p>
        </div>
      </div>
    </div>
  </div>
</div> <!-- /.untree_co-section -->

<div class="site-footer">


  <div class="container">
    <div class="row justify-content-between">
      <div class="col-lg-5">
        <div class="widget mb-4">
          <h3 class="mb-2">About UntreeStore</h3>
          <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptate modi cumque rem recusandae quaerat at asperiores beatae saepe repudiandae quam rerum aspernatur dolores et ipsa obcaecati voluptates libero</p>
        </div>
        <div class="widget">
          <h3>Join our mailing list and receive exclusives</h3>
          <form action="#" class="subscribe">
            <div class="d-flex">
              <input type="email" class="form-control" placeholder="Email address">
              <input type="submit" class="btn btn-black" value="Subscribe">
            </div>
          </form>

          
        </div>
      </div>
      <div class="col-lg-2">
        <div class="widget">
          <h3>Help</h3> 
          <ul class="list-unstyled">
            <li><a href="#">Contact us</a></li>
            <li><a href="#">Account</a></li>
            <li><a href="#">Shipping</a></li>
            <li><a href="#">Returns</a></li>
            <li><a href="#">FAQ</a></li>   
          </ul>
        </div>
      </div>
      <div class="col-lg-2">
        <div class="widget">
          <h3>About</h3>
          <ul class="list-unstyled">
            <li><a href="#">About us</a></li>
            <li><a href="#">Press</a></li>
            <li><a href="#">Careers</a></li>
            <li><a href="#">Team</a></li>
            <li><a href="#">FAQ</a></li>   
          </ul>
        </div>
      </div>
      <div class="col-lg-2">
        <div class="widget">
          <h3>Shop</h3>
          <ul class="list-unstyled">
            <li><a href="#">Store</a></li>
            <li><a href="#">Gift Cards</a></li>
            <li><a href="#">Student Discount</a></li>
          </ul>
        </div>
      </div>
      
    </div>


    <div class="row mt-5">
      <div class="col-12 text-center">
        <ul class="list-unstyled social">
          <li><a href="#"><span class="icon-facebook"></span></a></li>
          <li><a href="#"><span class="icon-instagram"></span></a></li>
          <li><a href="#"><span class="icon-linkedin"></span></a></li>
          <li><a href="#"><span class="icon-twitter"></span></a></li>
        </ul>
      </div>
      <div class="col-12 text-center copyright">
        <p>Copyright &copy;<script>document.write(new Date().getFullYear());</script>. All Rights Reserved. &mdash; Designed with love by <a href="https://untree.co">Untree.co</a> <!-- License information: https://untree.co/license/ -->
        </p>

      </div>
    </div>
  </div> <!-- /.container -->
</div> <!-- /.site-footer -->

<div id="overlayer"></div>
<div class="loader">
  <div class="spinner-border" role="status">
    <span class="sr-only">Loading...</span>
  </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
			<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
      <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

			<script>
				$(document).ready(function () {

					$(".cpnBtn").on("click", function () {
						var couponCode = $(this).data("coupon-code");
						var minAmount = parseFloat($(this).data("min-amount"));
						var currentPurchaseAmount = parseFloat($("#currentPurchaseAmount").val());

						if (!isNaN(minAmount) && !isNaN(currentPurchaseAmount)) {
							if (currentPurchaseAmount >= minAmount) {

								$.ajax({
									url: "/couponget",
									method: "POST",
									data: { couponCode: couponCode },
									success: function (response) {

										if (response.success) {
											Swal.fire(
												'Success',
												'Coupon applied successfully.',
												'success'
											).then(function () {
												window.location.href = '/orderreview?couponCode=' + encodeURIComponent(response.couponCode);
											});
										} else {
											Swal.fire(
												'Error',
												'Coupon is not applicable. Error: ' + response.error,
												'error'
											);
										}
									},
									error: function () {
										Swal.fire(
											'Error',
											'Error occurred while checking the coupon.',
											'error'
										);
									}
								});
							} else {
								Swal.fire(
									'Error',
									'Purchase amount is less than the minimum required.',
									'error'
								);
							}
						} else {
							Swal.fire(
								'Error',
								'Invalid purchase amount or minimum amount.',
								'error'
							);
						}
					}); 
				});
			</script>

<%- include('../layouts/homeLayout/footer')%>
